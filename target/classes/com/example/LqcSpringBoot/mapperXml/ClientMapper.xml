<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.LqcSpringBoot.mapper.ClientMapper" >
  <resultMap id="BaseResultMap" type="com.example.LqcSpringBoot.model.Client" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="VARCHAR" />
    <result column="xydj" property="xydj" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="bz" property="bz" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="VARCHAR" />
    <result column="gjdate" property="gjdate" jdbcType="VARCHAR" />
    <result column="ed" property="ed" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="zq" property="zq" jdbcType="VARCHAR" />
    <result column="ssxs" property="ssxs" jdbcType="VARCHAR" />
  </resultMap>

  <!--条件查询-->
  <select id="selectBytj" resultMap="BaseResultMap">
    select * from client  where 1=1
    <if test="name != null and name != ''">
      AND name like  concat('%',#{name},'%')
    </if>
    <if test="phone != null and phone != ''">
      AND phone like  concat('%',#{phone},'%')
    </if>
    <if test="xydj != null and xydj!=''">
      AND xydj = #{xydj}
    </if>
    <if test="ssxs != null and ssxs!=''">
      AND ssxs = #{ssxs}
    </if>

  </select>
  <!--查询数据-->
<select id="selectTjdataA" resultType="java.lang.Integer">
  SELECT count(1) as a from client
</select>
  <select id="selectTjdataB" resultType="java.lang.Integer">
    SELECT sum(balance) as b from client
  </select>
  <select id="selectTjdataC" resultType="java.lang.Integer">
    SELECT count(1) as c from client where flag =1;
  </select>
  <select id="selectTjdataD" resultType="java.lang.Integer">
    SELECT count(1) from client where balance!=0
  </select>

  <!--统计客户分布-->
  <select id="selectGroupAddess" resultType="java.util.Map">
    select address as `name`, count(1) as `value` from client  GROUP BY address
  </select>
  <select id="selectTjdataB" resultType="java.lang.Integer">
    SELECT sum(balance) as b from client
  </select>

</mapper>